@import "tailwindcss";

/* Esta é uma boa forma de definir uma variante customizada para o dark mode.
   Apenas certifique-se que seu ThemeStyles.tsx (ou lógica similar)
   está realmente aplicando o atributo data-theme="dark" no elemento <html> ou <body>
   quando um tema escuro está ativo.
   Seu ThemeStyles.tsx atualmente adiciona uma classe "dark". Para usar este
   @custom-variant, você precisaria mudar ThemeStyles.tsx para usar data-theme="dark"
   ou alterar este seletor para algo como:
   @custom-variant dark (.dark &); ou similar, dependendo de onde a classe .dark é aplicada.
*/
@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@theme {
  /* Estas definições de variáveis CSS aqui (--color-primary: var(--color-primary); etc.)
     são redundantes se as variáveis originais (vindas do ThemeStyles.tsx)
     já estão no :root ou html. O Tailwind vai pegá-las de qualquer forma
     quando você as referenciar em `colors`, `fontFamily`, etc.
     Pode remover estas linhas para simplificar. */
  --color-primary: var(--color-primary);
  --color-secondary: var(--color-secondary);
  --color-accent: var(--color-accent);
  --color-background: var(--color-background);
  --color-text-default: var(--color-text);
  --color-text-secondary: var(--color-textSecondary);
  --color-button-text: var(--color-buttonText);
  --color-card-background: var(--color-cardBackground);
  --color-card-background-secondary: var(--color-cardBackgroundSecondary);

  /* colors: {
    primary: var(--color-primary),
    secondary: var(--color-secondary),
    accent: var(--color-accent),
    background: var(--color-background),
    'text-default': var(--color-text-default), 
    'text-secondary': var(--color-text-secondary),
    'button-text': var(--color-button-text), 
    'card-bg': var(--color-card-background),
    'card-bg-secondary': var(--color-card-background-secondary),

  },

  fontFamily: {
    heading: ['var(--font-heading)', 'sans-serif'],
    body: ['var(--font-body)', 'sans-serif'],
  },

  
  keyframes: {
    wiggle: {
      '0%': { transform: 'rotate(90deg)' },
      '100%': { transform: 'rotate(0deg)' },
    },
    fadeIn: { 
      'from': { opacity: '0' },
      'to': { opacity: '1' },
    },
    slideUp: {
      'from': { transform: 'translateY(20px)', opacity: '0'},
      'to': { transform: 'translateY(0)', opacity: '1'},
    }
  },
  animation: {
    wiggle: 'wiggle 0.3s ease-out',
    fadeIn: 'fadeIn 0.5s ease-in-out', 
    slideUp: 'slideUp 0.5s ease-in-out',
  },

  borderRadius: {
    sm: 'var(--radius-small)',
    DEFAULT: 'var(--radius-medium)',
    md: 'var(--radius-medium)',
    lg: 'var(--radius-large)',
  } */

  /* Estilos base */
  /* body: {
    fontFamily: theme('fontFamily.body'),
    backgroundColor: theme('colors.background'),
    color: theme('colors.text-default'), 
  },

  h1,h2,h3,h4,h5,h6: {
    fontFamily: theme('fontFamily.heading'), 
    color: theme('colors.text-default'), 
  } */
}

/* As variáveis definidas aqui no :root podem ser úteis como fallback
   se o JavaScript estiver desabilitado e ThemeStyles.tsx não rodar.
   No entanto, o sistema de temas dinâmicos depende de JS.
   Se o seu ThemeStyles.tsx já define --color-primary, etc.,
   as definições aqui com nomes diferentes (ex: --primary vs --color-primary) não conflitam,
   mas as que têm o mesmo nome seriam sobrescritas pelo JS.
   Para este projeto, o ideal é que ThemeStyles.tsx seja a fonte da verdade para as vars dinâmicas.
   Estas variáveis aqui (--primary: #d4af37 etc.) não estão sendo usadas
   pela configuração @theme acima, pois você usou var(--color-primary), etc.
*/
:root {
  /* Estas variáveis estáticas não estão sendo usadas diretamente pela config @theme acima,
     pois você está usando as variáveis com prefixo --color-* que vêm do seu JS.
     Pode mantê-las como fallback ou para CSS que não passa pelo Tailwind,
     ou removê-las se todas as cores temáticas vierem do ThemeStyles.tsx.
  */
  --primary: #d4af37;
  --primary-dark: #b8941f;
  --secondary: #8b0000;
  --dark: #1e1e1e;
  --darker: #121212;
  --light: #f5f5f5;

  line-height: 1.5;
  font-weight: 400;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Scrollbar personalizada e outras animações que você já tem */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background-color: var(--color-card-background-secondary, theme('colors.neutral.800')); /* Usando variável do tema com fallback */
}

::-webkit-scrollbar-thumb {
  background-color: var(--color-primary, theme('colors.amber.600')); /* Usando variável do tema com fallback */
  @apply rounded-full;
}

::-webkit-scrollbar-thumb:hover {
  background-color: var(--color-secondary, theme('colors.amber.500')); /* Usando variável do tema com fallback */
}

/*
  Suas classes .animate-fadeIn e .animate-slideUp agora podem usar
  as animações definidas no @theme. Por exemplo:
  .animate-fadeIn {
    @apply animate-fadeIn;
  }
  .animate-slideUp {
    @apply animate-slideUp;
  }
  Ou você pode aplicar as classes 'animate-fadeIn' e 'animate-slideUp' diretamente no HTML/JSX.
  Os @keyframes fadeIn e slideUp globais são redundantes se definidos no @theme.
*/

/* Transições */
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

/* Efeitos de hover */
.hover-scale {
  transition: transform 0.3s ease;
}

.hover-scale:hover {
  transform: scale(1.05);
}

/* Estilos para o PWA */
@media (display-mode: standalone) {
  body {
    overscroll-behavior-y: none;
  }
}


/* Customização global do PrimeReact baseada nos temas */

/* Reset de estilos do PrimeReact para usar nossos temas */
.barberia-theme-masculine_default {
  /* Botões */
  .p-button {
    background: var(--primary-color);
    border: 1px solid var(--primary-color);
    color: var(--primary-color-text);
    border-radius: var(--border-radius);
    font-family: var(--font-family);
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .p-button:hover {
    background: var(--primary-color);
    border-color: var(--primary-color);
    opacity: 0.9;
    transform: translateY(-1px);
    box-shadow: var(--shadow-3);
  }

  .p-button.p-button-secondary {
    background: var(--surface-100);
    border-color: var(--surface-300);
    color: var(--text-color);
  }

  .p-button.p-button-outlined {
    background: transparent;
    border-color: var(--primary-color);
    color: var(--primary-color);
  }

  /* Inputs */
  .p-inputtext {
    background: var(--surface-0);
    border: 2px solid var(--surface-300);
    border-radius: var(--border-radius);
    color: var(--text-color);
    font-family: var(--font-family);
    padding: 0.75rem 1rem;
    transition: all 0.2s ease;
  }

  .p-inputtext:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb), 0.1);
    outline: none;
  }

  /* Cards */
  .p-card {
    background: var(--surface-0);
    border: 1px solid var(--surface-200);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-2);
    color: var(--text-color);
  }

  .p-card .p-card-header {
    background: var(--surface-50);
    border-bottom: 1px solid var(--surface-200);
    border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
    padding: 1.5rem;
  }

  .p-card .p-card-body {
    padding: 1.5rem;
  }

  .p-card .p-card-title {
    color: var(--text-color);
    font-family: var(--font-family);
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .p-card .p-card-subtitle {
    color: var(--text-color-secondary);
    font-family: var(--font-family);
  }

  /* Dropdown */
  .p-dropdown {
    background: var(--surface-0);
    border: 2px solid var(--surface-300);
    border-radius: var(--border-radius);
    color: var(--text-color);
  }

  .p-dropdown:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb), 0.1);
  }

  .p-dropdown-panel {
    background: var(--surface-0);
    border: 1px solid var(--surface-300);
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-4);
  }

  .p-dropdown-item {
    color: var(--text-color);
    padding: 0.75rem 1rem;
    transition: all 0.2s ease;
  }

  .p-dropdown-item:hover {
    background: var(--surface-100);
    color: var(--text-color);
  }

  .p-dropdown-item.p-highlight {
    background: var(--primary-color);
    color: var(--primary-color-text);
  }

  /* Calendar */
  .p-calendar .p-inputtext {
    background: var(--surface-0);
    border: 2px solid var(--surface-300);
    border-radius: var(--border-radius);
  }

  .p-datepicker {
    background: var(--surface-0);
    border: 1px solid var(--surface-300);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-4);
  }

  .p-datepicker .p-datepicker-header {
    background: var(--surface-50);
    border-bottom: 1px solid var(--surface-200);
    color: var(--text-color);
  }

  .p-datepicker table td > span {
    color: var(--text-color);
    border-radius: var(--border-radius);
    transition: all 0.2s ease;
  }

  .p-datepicker table td > span:hover {
    background: var(--surface-100);
    color: var(--text-color);
  }

  .p-datepicker table td > span.p-highlight {
    background: var(--primary-color);
    color: var(--primary-color-text);
  }

  /* Dialog */
  .p-dialog {
    background: var(--surface-0);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-4);
    color: var(--text-color);
  }

  .p-dialog .p-dialog-header {
    background: var(--surface-50);
    border-bottom: 1px solid var(--surface-200);
    border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
    color: var(--text-color);
    padding: 1.5rem;
  }

  .p-dialog .p-dialog-content {
    padding: 1.5rem;
  }

  .p-dialog .p-dialog-footer {
    background: var(--surface-50);
    border-top: 1px solid var(--surface-200);
    border-radius: 0 0 var(--border-radius-lg) var(--border-radius-lg);
    padding: 1rem 1.5rem;
  }

  /* Toast */
  .p-toast .p-toast-message {
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-3);
    margin: 0 0 1rem 0;
  }

  .p-toast .p-toast-message.p-toast-message-info {
    background: var(--blue-500);
    border: 1px solid var(--blue-500);
    color: white;
  }

  .p-toast .p-toast-message.p-toast-message-success {
    background: var(--green-500);
    border: 1px solid var(--green-500);
    color: white;
  }

  .p-toast .p-toast-message.p-toast-message-warn {
    background: var(--yellow-500);
    border: 1px solid var(--yellow-500);
    color: white;
  }

  .p-toast .p-toast-message.p-toast-message-error {
    background: var(--red-500);
    border: 1px solid var(--red-500);
    color: white;
  }

  /* DataTable */
  .p-datatable {
    background: var(--surface-0);
    border: 1px solid var(--surface-200);
    border-radius: var(--border-radius-lg);
    color: var(--text-color);
  }

  .p-datatable .p-datatable-header {
    background: var(--surface-50);
    border-bottom: 1px solid var(--surface-200);
    color: var(--text-color);
    padding: 1rem 1.5rem;
  }

  .p-datatable .p-datatable-thead > tr > th {
    background: var(--surface-100);
    border-bottom: 1px solid var(--surface-200);
    color: var(--text-color);
    font-weight: 600;
    padding: 1rem;
  }

  .p-datatable .p-datatable-tbody > tr > td {
    border-bottom: 1px solid var(--surface-200);
    color: var(--text-color);
    padding: 1rem;
  }

  .p-datatable .p-datatable-tbody > tr:hover {
    background: var(--surface-50);
  }

  /* Menu */
  .p-menu {
    background: var(--surface-0);
    border: 1px solid var(--surface-300);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-3);
    color: var(--text-color);
  }

  .p-menu .p-menuitem-link {
    color: var(--text-color);
    padding: 0.75rem 1rem;
    transition: all 0.2s ease;
  }

  .p-menu .p-menuitem-link:hover {
    background: var(--surface-100);
    color: var(--text-color);
  }

  .p-menu .p-menuitem-link.p-disabled {
    color: var(--text-color-secondary);
    opacity: 0.6;
  }
}

/* Tema escuro específico */
.barberia-theme-masculinoModerno {
  /* Ajustes específicos para tema escuro */
  .p-inputtext {
    background: var(--surface-100);
    border-color: var(--surface-400);
    color: var(--text-color);
  }

  .p-dropdown {
    background: var(--surface-100);
    border-color: var(--surface-400);
  }

  .p-calendar .p-inputtext {
    background: var(--surface-100);
    border-color: var(--surface-400);
  }
}

/* Animações customizadas */
.p-button {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.p-button:hover {
  transform: translateY(-2px);
}

.p-button:active {
  transform: translateY(0);
}

.p-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.p-card:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-4);
}

/* Responsividade */
@media (max-width: 768px) {
  .p-dialog {
    margin: 1rem;
    max-height: calc(100vh - 2rem);
    width: calc(100vw - 2rem);
  }

  .p-card .p-card-header,
  .p-card .p-card-body {
    padding: 1rem;
  }
}
